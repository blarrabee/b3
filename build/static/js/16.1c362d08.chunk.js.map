{"version":3,"sources":["hooks/useWindowDimension.ts","views/Chart/components/FullPage.tsx","views/Trade/IFrame.tsx","views/Chart/Chart.tsx"],"names":["getWindowDimensions","width","window","innerWidth","height","innerHeight","templateObject_1","props","url","title","iframeRef","isDark","ThemeContext","selectedLanguage","_a","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","forwardRef","heightCalculationMethod","minHeight","src","onLoad","e","payload","current","sendMessage","style","minWidth","__makeTemplateObject","cooked","raw","Object","defineProperty","value","div","children"],"mappings":"oMACA,SAASA,IAEL,MAAO,CACHC,MAFQC,OAAOC,WAGfC,OAHoCF,OAAOG,a,ICK/CC,E,kBCcW,EAfF,SAAUC,GACnB,IAAIC,EAAMD,EAAMC,IAAKC,EAAQF,EAAME,MAC/BC,EAAY,iBAAO,MACnBC,EAAS,qBAAWC,EAAA,GAAcD,OAClCE,EAAmB,qBAAW,KAAiBA,iBAC/CT,EFHO,WACX,IAAIU,EAAK,mBAASd,KAAwBe,EAAmBD,EAAG,GAAIE,EAAsBF,EAAG,GAQ7F,OAPA,qBAAU,WACN,SAASG,IACLD,EAAoBhB,KAGxB,OADAE,OAAOgB,iBAAiB,SAAUD,GAC3B,WAAc,OAAOf,OAAOiB,oBAAoB,SAAUF,MAClE,IACIF,EENMK,GAAsBhB,OAQnC,OAAQ,aAAD,CAAM,IAAe,CAAEiB,WAAYX,EAAWY,wBAAyB,MAAOb,MAAOA,EAAOc,UAAWnB,EAAS,GAAIoB,IAAKhB,EAAKiB,OAPlH,SAAUC,GACzB,IAAIC,EAAU,CACVhB,OAAQA,EACRE,iBAAkBA,GAEtBH,EAAUkB,QAAQC,YAAYF,IAEyHG,MAAO,CAAE7B,MAAO,MAAO8B,SAAU,cAAY,IDnBxMC,EAA8D,SAAUC,EAAQC,GAEhF,OADIC,OAAOC,eAAkBD,OAAOC,eAAeH,EAAQ,MAAO,CAAEI,MAAOH,IAAiBD,EAAOC,IAAMA,EAClGD,GAII,E,KADA,EAAOK,IAAIhC,IAAqBA,EAAmB0B,EAAqB,CAAC,yGAA0G,CAAC,4GEEpL,EAHH,WACR,OAAQ,aAAD,CAAM,EAAU,CAAEO,SAAU,cAAK,EAAQ,CAAE9B,MAAO,QAASD,IAAK,qGAAkG,SAAW","file":"static/js/16.1c362d08.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nfunction getWindowDimensions() {\r\n    var width = window.innerWidth, height = window.innerHeight;\r\n    return {\r\n        width: width,\r\n        height: height,\r\n    };\r\n}\r\nexport default function useWindowDimensions() {\r\n    var _a = useState(getWindowDimensions()), windowDimensions = _a[0], setWindowDimensions = _a[1];\r\n    useEffect(function () {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return function () { return window.removeEventListener('resize', handleResize); };\r\n    }, []);\r\n    return windowDimensions;\r\n}\r\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\nimport styled from 'styled-components';\r\nvar FullPage = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: stretch;\\n  height: 100%;\\n  flex: 1;\\n\"], [\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: stretch;\\n  height: 100%;\\n  flex: 1;\\n\"])));\r\nexport default FullPage;\r\nvar templateObject_1;\r\n","import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport React, { useContext, useRef } from 'react';\r\nimport IframeResizer from 'iframe-resizer-react';\r\nimport useWindowDimensions from 'hooks/useWindowDimension';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { LanguageContext } from '../../contexts/Localisation/languageContext';\r\nvar IFrame = function (props) {\r\n    var url = props.url, title = props.title;\r\n    var iframeRef = useRef(null);\r\n    var isDark = useContext(ThemeContext).isDark;\r\n    var selectedLanguage = useContext(LanguageContext).selectedLanguage;\r\n    var height = useWindowDimensions().height;\r\n    var sendSettings = function (e) {\r\n        var payload = {\r\n            isDark: isDark,\r\n            selectedLanguage: selectedLanguage,\r\n        };\r\n        iframeRef.current.sendMessage(payload);\r\n    };\r\n    return (_jsx(IframeResizer, { forwardRef: iframeRef, heightCalculationMethod: \"max\", title: title, minHeight: height - 64, src: url, onLoad: sendSettings, style: { width: '1px', minWidth: '100%' } }, void 0));\r\n};\r\nexport default IFrame;\r\n","import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport React from 'react';\r\nimport IFrame from 'views/Trade';\r\nimport FullPage from './components/FullPage';\r\nvar Chart = function () {\r\n    return (_jsx(FullPage, { children: _jsx(IFrame, { title: \"chart\", url: \"https://goswappcharts.web.app/?isbsc=true&tokenId=0x901e58695306b5c33c5169334e921a4cf4841571\" }, void 0) }, void 0));\r\n};\r\nexport default Chart;\r\n"],"sourceRoot":""}